# math

## 常量折叠
计算常量表达式

## 加法 
加0返回本身。

## 乘除削弱
卷积对乘除运算开销大，尽量转换为其他运算。
### 削弱表达式强度
对二的幂次的乘除转为移位运算。

但有一个问题：
对负数-109（10010011）
移位运算后得到11001001=-55，但除法运算的-109/2==-54

### 乘1运算
返回被乘1的数。

### 乘0运算
返回被乘0的数。

![](multi_const.png)

## 对（a+b）/3形式的卷积优化
转换为a/3+b/3形式。对ast进行修改。

这样有利于卷积引擎（convolutional engine）的在map算子中填充更多项（即要除以3的项更多）。所谓卷积引擎，可以由以下的公式说明：

![卷积通式](conv.png)

比如我们一般使用的卷积，Map对应乘法，R（Reduce）函数对应累加。

## cast的常量传播
cast操作举例：
```
[uint8[3]](inputImage(x,y)*0.9)
```
意思是，将括号中的inputImage(x,y)*0.9转换为一个uint8类型的，长度为3的数组。

如果编译时可以得到数组的长度信息，而且被转换的是常数，那么就直接建立一个数组，并复制常数值到每一项。

这种优化用于二元运算对操作数的处理。














